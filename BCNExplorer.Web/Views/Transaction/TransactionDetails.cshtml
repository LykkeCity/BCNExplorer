@model TransactionViewModel
@{
    Layout = null;
}

<div class="transaction_view @(Model.IsColor?"transaction_view--colored":"")">

    <div class="table-responsive">

        <div class="transaction_view__table">
            <table class="table table--transaction_view">
                <tbody>
                    <tr class="table__header">
                        <th colspan="5">
                            <div class="transaction_view__title">Bitcoin</div>
                        </th>
                    </tr>
                <tr class="table__content">
                    <td class="transaction_view__logo"><img src="/img/assets/bitcoin.png" width="48" alt="Bitcoin"></td>
                    @if (Model.IsCoinBase)
                    {
                        <td>
                            <div class="transaction_view__line"><i class="icon icon--info"></i> Mined coins
                            </div>
                        </td>
                    }
                    else
                    {
                        <td>
                            @foreach (var input in Model.Bitcoin.AggregatedIns)
                            {
                                var aggregatedContainerId = input.TitleItem.GetUniqueHtmlId(Model.TransactionId);
                                <text>
                                    @RenderInOut(input.TitleItem, aggregatedContainerId)
                                </text>

                                <text>
                                    @if (input.ShowAggregatedTransactions)
                                    {
                                        <div class="transaction_view__advanced" style="display: none;" id="@aggregatedContainerId">
                                            @foreach (var aggregated in input.AggregatedTransactions)
                                            {
                                                @RenderInOut(aggregated)
                                            }
                                        </div>
                                    }
                                </text>
                            }
                        </td>

                    }

                    <td class="transaction_view__arrow">
                        <div class="colored_arrow"></div>
                    </td>
                    <td>
                        @foreach (var output in Model.Bitcoin.AggregatedOuts)
                        {
                            var aggregatedContainerId = output.TitleItem.GetUniqueHtmlId(Model.TransactionId);
                            <text>
                                @RenderInOut(output.TitleItem, aggregatedContainerId)
                            </text>

                            <text>
                                @if (output.ShowAggregatedTransactions)
                                {
                                    <div class="transaction_view__advanced" style="display: none;" id="@aggregatedContainerId">
                                        @foreach (var aggregated in output.AggregatedTransactions)
                                        {
                                            @RenderInOut(aggregated)
                                        }
                                    </div>
                                }
                            </text>
                        }
                        <div class="transaction_view__row row">
                            <div class="transaction_view__line col-sm-8">
                                Fees
                            </div>
                            <div class="transaction_view__line col-sm-4">
                                <span>@Model.Bitcoin.FeesDescription</span>
                            </div>
                        </div>
                    </td>
                </tr>
                @foreach (var coloredAsset in Model.ColoredAssets)
                {
                    <tr class="table__header">
                        <th colspan="6">
                            <div class="transaction_view__title">@coloredAsset.Name <span>@coloredAsset.AssetId</span></div>
                        </th>
                    </tr>

                    <tr class="table__content">
                        <td class="transaction_view__logo"><img src="@coloredAsset.IconImageUrl" width="48" alt="@coloredAsset.AssetId"></td>
                        @if (false)
                        {
                            <td>
                                <div class="transaction_view__line">
                                    <i class="icon icon--info"></i> Issued Asset
                                </div>
                            </td>
                        }
                        else
                        {
                            <td>
                                @foreach (var input in coloredAsset.AggregatedIns)
                                {
                                    var aggregatedContainerId = input.TitleItem.GetUniqueHtmlId(Model.TransactionId);
                                    <text>
                                        @RenderInOut(input.TitleItem, aggregatedContainerId)
                                    </text>

                                    <text>
                                        @if (input.ShowAggregatedTransactions)
                                        {
                                            <div class="transaction_view__advanced" style="display: none;" id="@aggregatedContainerId">
                                                @foreach (var aggregated in input.AggregatedTransactions)
                                                {
                                                    @RenderInOut(aggregated)
                                                }
                                            </div>
                                        }
                                    </text>
                                }
                            </td>

                        }

                        <td class="transaction_view__arrow">
                            <div class="colored_arrow"></div>
                        </td>
                        <td>
                            @foreach (var output in coloredAsset.AggregatedOuts)
                            {
                                var aggregatedContainerId = output.TitleItem.GetUniqueHtmlId(Model.TransactionId);
                                <text>
                                    @RenderInOut(output.TitleItem, aggregatedContainerId)
                                </text>

                                <text>
                                    @if (output.ShowAggregatedTransactions)
                                    {
                                        <div class="transaction_view__advanced" style="display: none;" id="@aggregatedContainerId">
                                            @foreach (var aggregated in output.AggregatedTransactions)
                                            {
                                                @RenderInOut(aggregated)
                                            }
                                        </div>
                                    }
                                </text>
                            }
                        </td>
                    </tr>
}
                </tbody>
            </table>
        </div>

    </div>
</div>


@helper RenderInOut(IInOutViewModel inOutViewModel, string aggregatedTransContainerId = null)
{

    <div class="transaction_view__row row">
        <div class="transaction_view__line col-sm-8">
            @if (inOutViewModel.ShowPreviousTransaction)
            {
                <a href="@Url.Action("Index", "Address", new {id = inOutViewModel.Address})"><i class="icon icon--arrow-left-alt"></i></a>
            }
            @if (inOutViewModel.IsUnrecoginzedAddress)
            {
                <span>Unrecognized address</span>
            }
            else
            {
                <a href="@Url.Action("Index", "Address", new {id = inOutViewModel.Address})">@inOutViewModel.Address</a>
            }
        </div>
        <div class="transaction_view__line col-sm-4">
            @if (inOutViewModel.ShowAggregatedTransactions)
            {
                <a href="#@aggregatedTransContainerId" class="open_hidden_content">@inOutViewModel.ValueDescription (@inOutViewModel.AggregatedTransactionCount)<i class="caret"></i></a>
            }
            else
            {
                <span>@inOutViewModel.ValueDescription</span>
            }
        </div>
    </div>
}